{"version":3,"sources":["components/Tasks/Task.module.css","components/Alert/Alert.module.css","components/Pagination/Pagination.module.css","components/Form/Form.module.css","redux/types.js","components/Alert/Alert.js","components/Form/Form.js","redux/action.js","components/Tasks/Task.js","components/Pagination/Pagination.js","components/Tasks/TasksList.js","components/HomePage/HomePage.js","components/Login/Login.js","App.js","reportWebVitals.js","redux/tasksReduser.js","redux/rootReducer.js","index.js"],"names":["module","exports","FETCH_TASKS","ADD_TASK","Alert","text","type","className","styles","alert__success","alert__error","role","Form","dispatch","useDispatch","taskInitialState","username","email","useState","task","setTask","alertText","alertType","alert","setAlert","handlerImputChange","event","target","value","name","form","onSubmit","preventDefault","newTask","id","Date","now","status","trim","payload","addTask","placeholder","onChange","Task","taskContainer","Pagination","tasksPerPage","totalTasks","paginate","pageNumbers","i","Math","ceil","push","pagination","map","number","pagination__item","onClick","TasksList","tasks","useSelector","state","currentPage","setCurrentPage","useEffect","a","fetch","response","json","message","indexOfLastTask","indexOfFirstTask","renderTasks","slice","index","taskHeader","length","pageNumber","HomePage","Login","App","to","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce33c6de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskContainer\":\"Task_taskContainer___3iD2\",\"taskHeader\":\"Task_taskHeader__3le4T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__1rkHi\",\"alert__error\":\"Alert_alert__error__3yR4_\",\"alert__success\":\"Alert_alert__success__1hWTy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__2plzt\",\"pagination__item\":\"Pagination_pagination__item__xBGBz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\"};","export const FETCH_TASKS = 'TASKS/FETCH_TASKS';\nexport const ADD_TASK = 'TASKS/ADD_TASKS';\n","import React from 'react';\nimport styles from './Alert.module.css';\n\nexport default function Alert({ text, type }) {\n  return (\n    <small\n      className={\n        type === 'success' ? styles.alert__success : styles.alert__error\n      }\n      role='alert'\n    >\n      {text}\n    </small>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTask } from '../../redux/action';\nimport Alert from '../Alert/Alert';\nimport styles from './Form.module.css';\n\nexport default function Form() {\n  const dispatch = useDispatch();\n  const taskInitialState = { username: '', email: '', text: '' };\n  const [task, setTask] = useState(taskInitialState);\n  const [alert, setAlert] = useState({ alertText: '', alertType: '' });\n\n  const handlerImputChange = event => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setTask({ ...task, [name]: value });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    const newTask = {\n      id: Date.now(),\n      username: task.username,\n      email: task.email,\n      text: task.text,\n      status: 0,\n    };\n\n    setTask(taskInitialState);\n\n    if (!task.username.trim() || !task.email.trim() || !task.text.trim()) {\n      setAlert({\n        alertText: \"Any field shouldn't be empty\",\n        alertType: 'error',\n      });\n    } else {\n      dispatch(addTask(newTask));\n      setAlert({\n        alertText: 'The task has been created successfully',\n        alertType: 'success',\n      });\n    }\n  };\n\n  return (\n    <>\n      {alert.alertText && (\n        <Alert text={alert.alertText} type={alert.alertType} />\n      )}\n      <form className={styles.form} onSubmit={submitHandler}>\n        <input\n          type='text'\n          value={task.username}\n          name='username'\n          placeholder='Username'\n          onChange={handlerImputChange}\n        />\n        <input\n          type='email'\n          value={task.email}\n          name='email'\n          placeholder='Email'\n          onChange={handlerImputChange}\n        />\n        <input\n          type='text'\n          value={task.text}\n          name='text'\n          placeholder='Text'\n          onChange={handlerImputChange}\n        />\n\n        <button type='submit'>Create Task</button>\n      </form>\n    </>\n  );\n}\n","import { ADD_TASK, FETCH_TASKS } from './types';\n\nexport function fetchTasks() {\n  return async dispatch => {\n    const response = await fetch(\n      'https://uxcandy.com/~shapoval/test-task-backend/v2/?developer=Sergey'\n    );\n    const json = await response.json();\n    const tasks = json.message.tasks;\n    dispatch({ type: FETCH_TASKS, payload: tasks });\n  };\n}\n\nexport function addTask(newTask) {\n  return {\n    type: ADD_TASK,\n    payload: newTask,\n  };\n}\n","import React from 'react';\nimport styles from './Task.module.css';\n\nexport default function Task({ task }) {\n  return (\n    <div className={styles.taskContainer}>\n      <span>{task.username}</span>\n      <span>{task.email}</span>\n      <span>{task.text}</span>\n      <span>{task.status}</span>\n    </div>\n  );\n}\n","import React from 'react';\nimport styles from './Pagination.module.css';\n\nconst Pagination = ({ tasksPerPage, totalTasks, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalTasks / tasksPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav className={styles.pagination}>\n      {pageNumbers.map(number => (\n        <span\n          key={number}\n          className={styles.pagination__item}\n          onClick={() => paginate(number)}\n        >\n          {number}\n        </span>\n      ))}\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { fetchTasks } from '../../redux/action';\nimport Task from './Task';\nimport Pagination from '../Pagination/Pagination';\nimport styles from './Task.module.css';\n\nfunction TasksList() {\n  const dispatch = useDispatch();\n  const tasks = useSelector(state => state.tasks.tasks);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [tasksPerPage] = useState(3);\n\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n\n  const indexOfLastTask = currentPage * tasksPerPage;\n  const indexOfFirstTask = indexOfLastTask - tasksPerPage;\n  const currentTasks = tasks.slice(indexOfFirstTask, indexOfLastTask);\n\n  const renderTasks = currentTasks.map((task, index) => {\n    return <Task task={task} key={index} />;\n  });\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n    <>\n      <div className={styles.taskHeader}>\n        <span>Username</span>\n        <span>Email</span>\n        <span>Text</span>\n        <span>Status</span>\n      </div>\n      <div>{renderTasks}</div>\n      <div className={styles.pagination}>\n        {tasks.length > 3 ? (\n          <Pagination\n            tasksPerPage={tasksPerPage}\n            totalTasks={tasks.length}\n            paginate={paginate}\n          />\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default TasksList;\n","import React from 'react';\nimport Form from '../Form/Form';\nimport TasksList from '../Tasks/TasksList';\n\nexport default function HomePage() {\n  return (\n    <>\n      <Form />\n      <TasksList />\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function Login() {\n  return <div>Login</div>;\n}\n","import { Switch, Route, Link } from 'react-router-dom';\nimport './App.css';\nimport HomePage from './components/HomePage/HomePage';\nimport Login from './components/Login/Login';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <nav>\n        <Link className='login-link' to='/login'>\n          Login\n        </Link>\n      </nav>\n      <Switch>\n        <Route exact path='/' component={HomePage} />\n        <Route exact path='/login' component={Login} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { FETCH_TASKS } from './types';\nimport { ADD_TASK } from './types';\n\nconst initialState = {\n  tasks: [],\n};\n\nexport const tasksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_TASKS:\n      return { ...state, tasks: action.payload };\n    case ADD_TASK:\n      return {\n        ...state,\n        tasks: [action.payload, ...state.tasks],\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { tasksReducer } from './tasksReduser';\n\nexport const rootReducer = combineReducers({\n  tasks: tasksReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { rootReducer } from './redux/rootReducer';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}